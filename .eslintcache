[{"/Users/joebrucker/Desktop/rec/to-flu/src/App.js":"1","/Users/joebrucker/Desktop/rec/to-flu/src/components/Modal.js":"2","/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js":"3","/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js":"4","/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js":"5","/Users/joebrucker/Desktop/rec/to-flu/src/index.js":"6"},{"size":451,"mtime":1609465599000,"results":"7","hashOfConfig":"8"},{"size":2740,"mtime":1609712771944,"results":"9","hashOfConfig":"8"},{"size":2183,"mtime":1609717618003,"results":"10","hashOfConfig":"8"},{"size":1626,"mtime":1609460988947,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1609270211290,"results":"12","hashOfConfig":"8"},{"size":518,"mtime":1609276229264,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19x42o0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joebrucker/Desktop/rec/to-flu/src/App.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/components/Modal.js",["27","28","29"],"/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js",["30"],"/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js",["31"],"import React, { Fragment, useState } from \"react\";\nimport '../styling/component.css';\n\n\nconst InputTodo = () => {\n  const [description, setDescription] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [due_date, setDueDate] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n    {/*const body = { description };*/}\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          description,\n          due_date,\n          recipient\n        })\n      });\n\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1>Todo Entry</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          placeholder=\"What\"\n        />\n        <input\n          type=\"date\"\n          name=\"due_date\"\n          id=\"due_date\"\n          value={due_date}\n          onChange={e => setDueDate(e.target.value)}\n          placeholder=\"When\"\n        />\n        <input\n          type=\"text\"\n          name=\"recipient\"\n          id=\"recipient\"\n          value={recipient}\n          onChange={e => setRecipient(e.target.value)}\n          placeholder=\"For Whom  \"\n        />\n        <button className={\"buttonX\"} >Add</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputTodo;","/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/index.js",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":37,"nodeType":"34","messageId":"35","endLine":1,"endColumn":44},{"ruleId":"36","severity":1,"message":"37","line":16,"column":13,"nodeType":"38","messageId":"39","endLine":16,"endColumn":48},{"ruleId":"40","severity":1,"message":"41","line":45,"column":60,"nodeType":"42","endLine":47,"endColumn":9},{"ruleId":"32","severity":1,"message":"43","line":13,"column":13,"nodeType":"34","messageId":"35","endLine":13,"endColumn":23},{"ruleId":"36","severity":1,"message":"37","line":13,"column":5,"nodeType":"38","messageId":"39","endLine":13,"endColumn":40},"no-unused-vars","'setShow' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'deleteTodo' is assigned a value but never used."]