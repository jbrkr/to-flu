[{"/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js":"1","/Users/joebrucker/Desktop/rec/to-flu/src/App.js":"2","/Users/joebrucker/Desktop/rec/to-flu/src/index.js":"3","/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js":"4","/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js":"5","/Users/joebrucker/Desktop/rec/to-flu/src/components/EditTodo.js":"6"},{"size":362,"mtime":1609270211290,"results":"7","hashOfConfig":"8"},{"size":544,"mtime":1609434693334,"results":"9","hashOfConfig":"8"},{"size":518,"mtime":1609276229264,"results":"10","hashOfConfig":"8"},{"size":886,"mtime":1609430887580,"results":"11","hashOfConfig":"8"},{"size":1711,"mtime":1609434742123,"results":"12","hashOfConfig":"8"},{"size":2351,"mtime":1609434593312,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19x42o0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/App.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/index.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js",["27"],"/Users/joebrucker/Desktop/rec/to-flu/src/components/EditTodo.js",["28"],"import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  //edit description function\n\n  const updateDescription = async e => {\n    e.preventDefault();\n    try {\n      const body = { description };\n      const response = await fetch(\n        `http://localhost:5000/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body)\n        }\n      );\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        class=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n\n      {/* \n        id = id10\n      */}\n      <div\n        class=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\">Edit Todo</h4>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div class=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={e => updateDescription(e)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;",{"ruleId":"29","severity":1,"message":"30","line":12,"column":13,"nodeType":"31","messageId":"32","endLine":12,"endColumn":23},{"ruleId":"29","severity":1,"message":"33","line":12,"column":13,"nodeType":"31","messageId":"32","endLine":12,"endColumn":21},"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]