[{"/Users/joebrucker/Desktop/rec/to-flu/src/App.js":"1","/Users/joebrucker/Desktop/rec/to-flu/src/components/Modal.js":"2","/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js":"3","/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js":"4","/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js":"5","/Users/joebrucker/Desktop/rec/to-flu/src/index.js":"6"},{"size":451,"mtime":1609465599000,"results":"7","hashOfConfig":"8"},{"size":3098,"mtime":1609732081846,"results":"9","hashOfConfig":"8"},{"size":2280,"mtime":1609728315801,"results":"10","hashOfConfig":"8"},{"size":2235,"mtime":1609735217626,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1609270211290,"results":"12","hashOfConfig":"8"},{"size":518,"mtime":1609276229264,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gyzvdm",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joebrucker/Desktop/rec/to-flu/src/App.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/components/Modal.js",["27","28","29"],"/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js",["30"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport '../styling/component.css';\n\nimport Edit from './Modal';\n\nconst ListTodos = () => {\n  const [todos, setTodos] = useState([]);\n\n  //delete todo function\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <div className={\"tdlist\"} style={{border: \"1px solid red\"}}>\n      <h2>Todos</h2>\n      <table id={\"tdl\"} className={\"tdl\"} class=\"table\">\n      <colgroup>\n          <col style={{width:\"18%\"}}/>\n\t        <col style={{width:\"8%\"}}/>\n\t        <col style={{width:\"4%\"}}/>\n          <col style={{width:\"2%\"}}/>\n\t        <col style={{width:\"2%\"}}/>\n          </colgroup>\n        <thead>\n          <tr style={{borderColor: \"black\"}}>\n            <th>What</th>\n            <th>When</th>\n            <th>For Whom</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {todos.map(todo => (\n            <tr key={todo.todo_id}  style={{borderColor: \"black\"}}>\n              <td>{todo.description}</td>\n              <td>{String(todo.due_date).split('T')[0]}</td>\n              <td>{todo.recipient}</td>\n              <td>\n                <Edit todo={todo} />\n              </td>\n              <td>\n                <button\n                   className={\"buttonX\"} \n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  X\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;","/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/index.js",[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":37,"nodeType":"33","messageId":"34","endLine":1,"endColumn":44},{"ruleId":"35","severity":1,"message":"36","line":16,"column":13,"nodeType":"37","messageId":"38","endLine":16,"endColumn":48},{"ruleId":"39","severity":1,"message":"40","line":45,"column":60,"nodeType":"41","endLine":47,"endColumn":9},{"ruleId":"31","severity":1,"message":"42","line":13,"column":13,"nodeType":"33","messageId":"34","endLine":13,"endColumn":23},"no-unused-vars","'setShow' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'deleteTodo' is assigned a value but never used."]