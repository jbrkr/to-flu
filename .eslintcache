[{"/Users/joebrucker/Desktop/rec/to-flu/src/App.js":"1","/Users/joebrucker/Desktop/rec/to-flu/src/components/Modal.js":"2","/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js":"3","/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js":"4","/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js":"5","/Users/joebrucker/Desktop/rec/to-flu/src/index.js":"6"},{"size":451,"mtime":1609465599000,"results":"7","hashOfConfig":"8"},{"size":2740,"mtime":1609712771944,"results":"9","hashOfConfig":"8"},{"size":2161,"mtime":1609462459937,"results":"10","hashOfConfig":"8"},{"size":1626,"mtime":1609460988947,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1609270211290,"results":"12","hashOfConfig":"8"},{"size":518,"mtime":1609276229264,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19x42o0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joebrucker/Desktop/rec/to-flu/src/App.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/components/Modal.js",["28","29","30"],"/Users/joebrucker/Desktop/rec/to-flu/src/components/ListTodo.js",["31"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport '../styling/component.css';\n\nimport Edit from './Modal';\n\nconst ListTodos = () => {\n  const [todos, setTodos] = useState([]);\n\n  //delete todo function\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table id={\"tdl\"} className={\"tdl\"} class=\"table\">\n      <colgroup>\n          <col style={{width:\"35%\"}}/>\n\t        <col style={{width:\"25%\"}}/>\n\t        <col style={{width:\"20%\"}}/>\n          <col style={{width:\"10%\"}}/>\n\t        <col style={{width:\"10%\"}}/>\n          </colgroup>\n        <thead>\n          <tr style={{borderColor: \"black\"}}>\n            <th>What</th>\n            <th>When</th>\n            <th>For Whom</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n          {todos.map(todo => (\n            <tr key={todo.todo_id}  style={{borderColor: \"black\"}}>\n              <td>{todo.description}</td>\n              <td>{todo.due_date}</td>\n              <td>{todo.recipient}</td>\n              <td>\n                <Edit todo={todo} />\n              </td>\n              <td>\n                <button\n                   className={\"buttonX\"} \n                  onClick={() => deleteTodo(todo.todo_id)}\n                >\n                  X\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;","/Users/joebrucker/Desktop/rec/to-flu/src/components/InputTodo.js",["32"],"import React, { Fragment, useState } from \"react\";\nimport '../styling/component.css';\n\n\nconst InputTodo = () => {\n  const [description, setDescription] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [due_date, setDueDate] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n    {/*const body = { description };*/}\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({\n          description,\n          due_date,\n          recipient\n        })\n      });\n\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1>Todo Entry</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          placeholder=\"What\"\n        />\n        <input\n          type=\"date\"\n          name=\"due_date\"\n          id=\"due_date\"\n          value={due_date}\n          onChange={e => setDueDate(e.target.value)}\n          placeholder=\"When\"\n        />\n        <input\n          type=\"text\"\n          name=\"recipient\"\n          id=\"recipient\"\n          value={recipient}\n          onChange={e => setRecipient(e.target.value)}\n          placeholder=\"For Whom  \"\n        />\n        <button className={\"buttonX\"} >Add</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputTodo;","/Users/joebrucker/Desktop/rec/to-flu/src/admin/reportWebVitals.js",[],"/Users/joebrucker/Desktop/rec/to-flu/src/index.js",[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":37,"nodeType":"35","messageId":"36","endLine":1,"endColumn":44},{"ruleId":"37","severity":1,"message":"38","line":16,"column":13,"nodeType":"39","messageId":"40","endLine":16,"endColumn":48},{"ruleId":"41","severity":1,"message":"42","line":45,"column":60,"nodeType":"43","endLine":47,"endColumn":9},{"ruleId":"33","severity":1,"message":"44","line":13,"column":13,"nodeType":"35","messageId":"36","endLine":13,"endColumn":23},{"ruleId":"37","severity":1,"message":"38","line":13,"column":5,"nodeType":"39","messageId":"40","endLine":13,"endColumn":40},"no-unused-vars","'setShow' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'deleteTodo' is assigned a value but never used."]